package org.chromium.ui.interpolators;

import android.view.animation.Interpolator;
import com.google.android.gms.games.quest.Quests;

public class BakedBezierInterpolator implements Interpolator {
    public static final BakedBezierInterpolator FADE_IN_CURVE = new BakedBezierInterpolator(FADE_IN_VALUES);
    private static final float[] FADE_IN_VALUES;
    public static final BakedBezierInterpolator FADE_OUT_CURVE = new BakedBezierInterpolator(FADE_OUT_VALUES);
    private static final float[] FADE_OUT_VALUES;
    public static final BakedBezierInterpolator TRANSFORM_CURVE = new BakedBezierInterpolator(TRANSFORM_VALUES);
    public static final BakedBezierInterpolator TRANSFORM_FOLLOW_THROUGH_CURVE = new BakedBezierInterpolator(TRANSFORM_FOLLOW_THROUGH_VALUES);
    private static final float[] TRANSFORM_FOLLOW_THROUGH_VALUES;
    private static final float[] TRANSFORM_VALUES;
    private final float mStepSize = (1.0f / ((float) (this.mValues.length - 1)));
    private final float[] mValues;

    static {
        float[] fArr = new float[Quests.SELECT_COMPLETED_UNCLAIMED];
        // fill-array-data instruction
        fArr[0] = 0;
        fArr[1] = 961656599;
        fArr[2] = 980151802;
        fArr[3] = 989399404;
        fArr[4] = 996929018;
        fArr[5] = 1002525898;
        fArr[6] = 1007478532;
        fArr[7] = 1011021880;
        fArr[8] = 1015061833;
        fArr[9] = 1017853562;
        fArr[10] = 1020430542;
        fArr[11] = 1023638346;
        fArr[12] = 1025544238;
        fArr[13] = 1027611191;
        fArr[14] = 1030215015;
        fArr[15] = 1032214859;
        fArr[16] = 1033718098;
        fArr[17] = 1035315288;
        fArr[18] = 1037274867;
        fArr[19] = 1039328399;
        fArr[20] = 1040851770;
        fArr[21] = 1041992620;
        fArr[22] = 1043180447;
        fArr[23] = 1044737373;
        fArr[24] = 1046032574;
        fArr[25] = 1047703585;
        fArr[26] = 1049002141;
        fArr[27] = 1049891334;
        fArr[28] = 1050619465;
        fArr[29] = 1051548923;
        fArr[30] = 1052491802;
        fArr[31] = 1053448104;
        fArr[32] = 1054417827;
        fArr[33] = 1055199645;
        fArr[34] = 1056179434;
        fArr[35] = 1056964608;
        fArr[36] = 1057357195;
        fArr[37] = 1057749782;
        fArr[38] = 1058140691;
        fArr[39] = 1058529922;
        fArr[40] = 1058867144;
        fArr[41] = 1059201011;
        fArr[42] = 1059533200;
        fArr[43] = 1059813379;
        fArr[44] = 1060137180;
        fArr[45] = 1060410648;
        fArr[46] = 1060679084;
        fArr[47] = 1060900543;
        fArr[48] = 1061162267;
        fArr[49] = 1061377016;
        fArr[50] = 1061588409;
        fArr[51] = 1061794768;
        fArr[52] = 1061997773;
        fArr[53] = 1062177289;
        fArr[54] = 1062353450;
        fArr[55] = 1062544710;
        fArr[56] = 1062694027;
        fArr[57] = 1062841667;
        fArr[58] = 1062984273;
        fArr[59] = 1063125202;
        fArr[60] = 1063262775;
        fArr[61] = 1063395315;
        fArr[62] = 1063526177;
        fArr[63] = 1063636907;
        fArr[64] = 1063744281;
        fArr[65] = 1063865077;
        fArr[66] = 1063952318;
        fArr[67] = 1064064726;
        fArr[68] = 1064146934;
        fArr[69] = 1064225787;
        fArr[70] = 1064316384;
        fArr[71] = 1064403626;
        fArr[72] = 1064474090;
        fArr[73] = 1064544554;
        fArr[74] = 1064609985;
        fArr[75] = 1064675416;
        fArr[76] = 1064735814;
        fArr[77] = 1064786146;
        fArr[78] = 1064841511;
        fArr[79] = 1064886809;
        fArr[80] = 1064938819;
        fArr[81] = 1064979084;
        fArr[82] = 1065026060;
        fArr[83] = 1065061292;
        fArr[84] = 1065096525;
        fArr[85] = 1065128401;
        fArr[86] = 1065158600;
        fArr[87] = 1065187122;
        fArr[88] = 1065213965;
        fArr[89] = 1065237453;
        fArr[90] = 1065259264;
        fArr[91] = 1065277719;
        fArr[92] = 1065292818;
        fArr[93] = 1065307918;
        fArr[94] = 1065321339;
        fArr[95] = 1065329728;
        fArr[96] = 1065339794;
        fArr[97] = 1065344827;
        fArr[98] = 1065349861;
        fArr[99] = 1065353216;
        fArr[100] = 1065353216;
        TRANSFORM_VALUES = fArr;
        float[] fArr2 = new float[Quests.SELECT_COMPLETED_UNCLAIMED];
        // fill-array-data instruction
        fArr2[0] = 0;
        fArr2[1] = 961656599;
        fArr2[2] = 978433815;
        fArr2[3] = 989399404;
        fArr2[4] = 995211031;
        fArr2[5] = 1000378414;
        fArr2[6] = 1004673381;
        fArr2[7] = 1008230151;
        fArr2[8] = 1011021880;
        fArr2[9] = 1014243105;
        fArr2[10] = 1016404011;
        fArr2[11] = 1018336746;
        fArr2[12] = 1020430542;
        fArr2[13] = 1022685400;
        fArr2[14] = 1024255748;
        fArr2[15] = 1025544238;
        fArr2[16] = 1026913259;
        fArr2[17] = 1028335967;
        fArr2[18] = 1029839205;
        fArr2[19] = 1031208226;
        fArr2[20] = 1032214859;
        fArr2[21] = 1033060431;
        fArr2[22] = 1033946268;
        fArr2[23] = 1034858948;
        fArr2[24] = 1035798472;
        fArr2[25] = 1036644044;
        fArr2[26] = 1037516459;
        fArr2[27] = 1038549936;
        fArr2[28] = 1039596834;
        fArr2[29] = 1040435695;
        fArr2[30] = 1040918879;
        fArr2[31] = 1041415484;
        fArr2[32] = 1041992620;
        fArr2[33] = 1042583178;
        fArr2[34] = 1043180447;
        fArr2[35] = 1043717318;
        fArr2[36] = 1044260900;
        fArr2[37] = 1044898434;
        fArr2[38] = 1045542679;
        fArr2[39] = 1046193635;
        fArr2[40] = 1046777482;
        fArr2[41] = 1047361330;
        fArr2[42] = 1048045840;
        fArr2[43] = 1048653175;
        fArr2[44] = 1049002141;
        fArr2[45] = 1049357818;
        fArr2[46] = 1049669874;
        fArr2[47] = 1049981931;
        fArr2[48] = 1050344319;
        fArr2[49] = 1050713417;
        fArr2[50] = 1051082516;
        fArr2[51] = 1051454970;
        fArr2[52] = 1051827424;
        fArr2[53] = 1052206590;
        fArr2[54] = 1052585755;
        fArr2[55] = 1052968275;
        fArr2[56] = 1053354151;
        fArr2[57] = 1053740027;
        fArr2[58] = 1054125903;
        fArr2[59] = 1054515134;
        fArr2[60] = 1054904366;
        fArr2[61] = 1055296953;
        fArr2[62] = 1055686184;
        fArr2[63] = 1056129103;
        fArr2[64] = 1056572021;
        fArr2[65] = 1056964608;
        fArr2[66] = 1057160901;
        fArr2[67] = 1057407527;
        fArr2[68] = 1057603820;
        fArr2[69] = 1057798436;
        fArr2[70] = 1058043383;
        fArr2[71] = 1058237999;
        fArr2[72] = 1058481268;
        fArr2[73] = 1058697694;
        fArr2[74] = 1058914120;
        fArr2[75] = 1059154035;
        fArr2[76] = 1059390593;
        fArr2[77] = 1059627152;
        fArr2[78] = 1059813379;
        fArr2[79] = 1060044905;
        fArr2[80] = 1060320051;
        fArr2[81] = 1060544866;
        fArr2[82] = 1060768003;
        fArr2[83] = 1061033083;
        fArr2[84] = 1061249509;
        fArr2[85] = 1061504523;
        fArr2[86] = 1061754503;
        fArr2[87] = 1061997773;
        fArr2[88] = 1062237687;
        fArr2[89] = 1062469213;
        fArr2[90] = 1062732615;
        fArr2[91] = 1062984273;
        fArr2[92] = 1063227543;
        fArr2[93] = 1063494300;
        fArr2[94] = 1063744281;
        fArr2[95] = 1064036205;
        fArr2[96] = 1064252631;
        fArr2[97] = 1064544554;
        fArr2[98] = 1064794535;
        fArr2[99] = 1065061292;
        fArr2[100] = 1065341472;
        FADE_OUT_VALUES = fArr2;
        float[] fArr3 = new float[Quests.SELECT_COMPLETED_UNCLAIMED];
        // fill-array-data instruction
        fArr3[0] = 993922541;
        fArr3[1] = 1026564293;
        fArr3[2] = 1033946268;
        fArr3[3] = 1038804949;
        fArr3[4] = 1041704052;
        fArr3[5] = 1043489148;
        fArr3[6] = 1045381618;
        fArr3[7] = 1047361330;
        fArr3[8] = 1048827658;
        fArr3[9] = 1049535657;
        fArr3[10] = 1050438271;
        fArr3[11] = 1051173113;
        fArr3[12] = 1051924732;
        fArr3[13] = 1052585755;
        fArr3[14] = 1053256843;
        fArr3[15] = 1053931287;
        fArr3[16] = 1054612442;
        fArr3[17] = 1055199645;
        fArr3[18] = 1055786847;
        fArr3[19] = 1056374050;
        fArr3[20] = 1056964608;
        fArr3[21] = 1057259887;
        fArr3[22] = 1057504834;
        fArr3[23] = 1057749782;
        fArr3[24] = 1058043383;
        fArr3[25] = 1058286653;
        fArr3[26] = 1058504756;
        fArr3[27] = 1058722860;
        fArr3[28] = 1058962774;
        fArr3[29] = 1059201011;
        fArr3[30] = 1059390593;
        fArr3[31] = 1059603664;
        fArr3[32] = 1059813379;
        fArr3[33] = 1059997929;
        fArr3[34] = 1060182478;
        fArr3[35] = 1060387160;
        fArr3[36] = 1060568354;
        fArr3[37] = 1060746192;
        fArr3[38] = 1060900543;
        fArr3[39] = 1061076704;
        fArr3[40] = 1061249509;
        fArr3[41] = 1061418959;
        fArr3[42] = 1061546466;
        fArr3[43] = 1061712560;
        fArr3[44] = 1061856844;
        fArr3[45] = 1061997773;
        fArr3[46] = 1062138701;
        fArr3[47] = 1062276275;
        fArr3[48] = 1062392037;
        fArr3[49] = 1062526255;
        fArr3[50] = 1062657117;
        fArr3[51] = 1062767847;
        fArr3[52] = 1062895354;
        fArr3[53] = 1063002728;
        fArr3[54] = 1063125202;
        fArr3[55] = 1063227543;
        fArr3[56] = 1063329884;
        fArr3[57] = 1063428869;
        fArr3[58] = 1063526177;
        fArr3[59] = 1063620130;
        fArr3[60] = 1063714082;
        fArr3[61] = 1063804679;
        fArr3[62] = 1063878499;
        fArr3[63] = 1063965740;
        fArr3[64] = 1064051304;
        fArr3[65] = 1064120091;
        fArr3[66] = 1064200621;
        fArr3[67] = 1064266052;
        fArr3[68] = 1064341550;
        fArr3[69] = 1064403626;
        fArr3[70] = 1064474090;
        fArr3[71] = 1064532810;
        fArr3[72] = 1064588175;
        fArr3[73] = 1064643540;
        fArr3[74] = 1064705615;
        fArr3[75] = 1064755947;
        fArr3[76] = 1064804601;
        fArr3[77] = 1064851577;
        fArr3[78] = 1064895198;
        fArr3[79] = 1064938819;
        fArr3[80] = 1064979084;
        fArr3[81] = 1065017672;
        fArr3[82] = 1065047871;
        fArr3[83] = 1065083103;
        fArr3[84] = 1065116657;
        fArr3[85] = 1065146856;
        fArr3[86] = 1065170344;
        fArr3[87] = 1065197188;
        fArr3[88] = 1065222354;
        fArr3[89] = 1065240809;
        fArr3[90] = 1065262619;
        fArr3[91] = 1065281074;
        fArr3[92] = 1065296173;
        fArr3[93] = 1065309595;
        fArr3[94] = 1065321339;
        fArr3[95] = 1065329728;
        fArr3[96] = 1065339794;
        fArr3[97] = 1065344827;
        fArr3[98] = 1065349861;
        fArr3[99] = 1065353216;
        fArr3[100] = 1065353216;
        FADE_IN_VALUES = fArr3;
        float[] fArr4 = new float[Quests.SELECT_COMPLETED_UNCLAIMED];
        // fill-array-data instruction
        fArr4[0] = 1033704676;
        fArr4[1] = 1050757038;
        fArr4[2] = 1054189656;
        fArr4[3] = 1056427737;
        fArr4[4] = 1057628986;
        fArr4[5] = 1058308463;
        fArr4[6] = 1058858756;
        fArr4[7] = 1059380527;
        fArr4[8] = 1059794924;
        fArr4[9] = 1060112014;
        fArr4[10] = 1060491179;
        fArr4[11] = 1060783102;
        fArr4[12] = 1061063282;
        fArr4[13] = 1061298163;
        fArr4[14] = 1061524655;
        fArr4[15] = 1061744437;
        fArr4[16] = 1061955830;
        fArr4[17] = 1062130313;
        fArr4[18] = 1062298085;
        fArr4[19] = 1062460824;
        fArr4[20] = 1062593364;
        fArr4[21] = 1062746037;
        fArr4[22] = 1062868510;
        fArr4[23] = 1062987629;
        fArr4[24] = 1063103391;
        fArr4[25] = 1063215799;
        fArr4[26] = 1063324851;
        fArr4[27] = 1063408737;
        fArr4[28] = 1063511078;
        fArr4[29] = 1063589931;
        fArr4[30] = 1063677172;
        fArr4[31] = 1063761058;
        fArr4[32] = 1063833200;
        fArr4[33] = 1063903665;
        fArr4[34] = 1063972451;
        fArr4[35] = 1064039560;
        fArr4[36] = 1064094925;
        fArr4[37] = 1064150290;
        fArr4[38] = 1064210688;
        fArr4[39] = 1064271086;
        fArr4[40] = 1064313029;
        fArr4[41] = 1064368393;
        fArr4[42] = 1064408659;
        fArr4[43] = 1064462346;
        fArr4[44] = 1064499256;
        fArr4[45] = 1064542876;
        fArr4[46] = 1064579786;
        fArr4[47] = 1064620052;
        fArr4[48] = 1064653606;
        fArr4[49] = 1064687161;
        fArr4[50] = 1064719037;
        fArr4[51] = 1064754269;
        fArr4[52] = 1064784468;
        fArr4[53] = 1064814667;
        fArr4[54] = 1064838155;
        fArr4[55] = 1064864999;
        fArr4[56] = 1064891843;
        fArr4[57] = 1064917008;
        fArr4[58] = 1064938819;
        fArr4[59] = 1064962307;
        fArr4[60] = 1064982440;
        fArr4[61] = 1065004250;
        fArr4[62] = 1065022705;
        fArr4[63] = 1065044515;
        fArr4[64] = 1065061292;
        fArr4[65] = 1065076392;
        fArr4[66] = 1065093169;
        fArr4[67] = 1065108269;
        fArr4[68] = 1065123368;
        fArr4[69] = 1065138468;
        fArr4[70] = 1065151889;
        fArr4[71] = 1065165311;
        fArr4[72] = 1065177055;
        fArr4[73] = 1065190477;
        fArr4[74] = 1065202221;
        fArr4[75] = 1065213965;
        fArr4[76] = 1065222354;
        fArr4[77] = 1065232420;
        fArr4[78] = 1065242486;
        fArr4[79] = 1065250875;
        fArr4[80] = 1065259264;
        fArr4[81] = 1065265974;
        fArr4[82] = 1065274363;
        fArr4[83] = 1065281074;
        fArr4[84] = 1065289463;
        fArr4[85] = 1065294496;
        fArr4[86] = 1065301207;
        fArr4[87] = 1065306240;
        fArr4[88] = 1065311273;
        fArr4[89] = 1065316306;
        fArr4[90] = 1065321339;
        fArr4[91] = 1065326372;
        fArr4[92] = 1065329728;
        fArr4[93] = 1065334761;
        fArr4[94] = 1065338117;
        fArr4[95] = 1065339794;
        fArr4[96] = 1065343150;
        fArr4[97] = 1065346505;
        fArr4[98] = 1065348183;
        fArr4[99] = 1065351538;
        fArr4[100] = 1065353216;
        TRANSFORM_FOLLOW_THROUGH_VALUES = fArr4;
    }

    private BakedBezierInterpolator(float[] values) {
        this.mValues = values;
    }

    public float getInterpolation(float input) {
        if (input >= 1.0f) {
            return 1.0f;
        }
        if (input <= 0.0f) {
            return 0.0f;
        }
        int position = Math.min((int) (((float) (this.mValues.length - 1)) * input), this.mValues.length - 2);
        return this.mValues[position] + ((this.mValues[position + 1] - this.mValues[position]) * ((input - (((float) position) * this.mStepSize)) / this.mStepSize));
    }
}
