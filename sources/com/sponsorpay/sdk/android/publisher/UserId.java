package com.sponsorpay.sdk.android.publisher;

import android.content.Context;
import android.content.SharedPreferences;
import com.sponsorpay.sdk.android.HostInfo;
import com.sponsorpay.sdk.android.SignatureTools;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

public class UserId {
    public static final String STATE_GENERATED_USERID_KEY = "STATE_GENERATED_USERID_KEY";
    private String mUserIdValue;

    public static synchronized String getAutoGenerated(Context context) {
        String userIdValue;
        synchronized (UserId.class) {
            SharedPreferences state = context.getSharedPreferences(SponsorPayPublisher.PREFERENCES_FILENAME, 0);
            userIdValue = state.getString(STATE_GENERATED_USERID_KEY, (String) null);
            if (userIdValue == null) {
                HostInfo hostInfo = new HostInfo(context);
                UserIdGenerator userIdGenerator = new UserIdGenerator();
                userIdGenerator.setTelephonyDeviceId(hostInfo.getUDID());
                userIdGenerator.setAndroidId(hostInfo.getAndroidId());
                userIdGenerator.setHardwareSerialNumber(hostInfo.getHardwareSerialNumber());
                userIdValue = userIdGenerator.generateUserId();
                SharedPreferences.Editor stateEditor = state.edit();
                stateEditor.putString(STATE_GENERATED_USERID_KEY, userIdValue);
                stateEditor.commit();
            }
        }
        return userIdValue;
    }

    public static UserId make(Context context, String userIdValue) {
        if (userIdValue == null || userIdValue.equals("")) {
            return new UserId(context);
        }
        return new UserId(userIdValue);
    }

    public UserId(Context context) {
        this.mUserIdValue = getAutoGenerated(context);
    }

    public UserId(String value) {
        this.mUserIdValue = value;
    }

    public String toString() {
        return this.mUserIdValue;
    }

    public static class UserIdGenerator {
        private String mAndroidId;
        private String mHardwareSerialNumber;
        private Set<String> mKnownInvalidAndroidIds;
        private String mTelephonyDeviceId;

        public boolean setTelephonyDeviceId(String deviceId) {
            if (isValidId(deviceId)) {
                this.mTelephonyDeviceId = deviceId;
                return true;
            }
            this.mTelephonyDeviceId = null;
            return false;
        }

        public boolean setAndroidId(String androidId) {
            if (isValidAndroidId(androidId)) {
                this.mAndroidId = androidId;
                return true;
            }
            this.mAndroidId = null;
            return false;
        }

        public boolean setHardwareSerialNumber(String value) {
            if (isValidId(value)) {
                this.mHardwareSerialNumber = value;
                return true;
            }
            this.mHardwareSerialNumber = null;
            return false;
        }

        public boolean isValidAndroidId(String androidId) {
            if (!isValidId(androidId)) {
                return false;
            }
            if (this.mKnownInvalidAndroidIds == null) {
                this.mKnownInvalidAndroidIds = new HashSet();
                this.mKnownInvalidAndroidIds.add("9774d56d682e549c");
            }
            if (!this.mKnownInvalidAndroidIds.contains(androidId)) {
                return true;
            }
            return false;
        }

        public static boolean isValidId(String id) {
            if (id == null || id.trim().equals("")) {
                return false;
            }
            Integer androidIdAsInteger = null;
            try {
                androidIdAsInteger = Integer.valueOf(Integer.parseInt(id));
            } catch (NumberFormatException e) {
            }
            if (androidIdAsInteger == null || androidIdAsInteger.intValue() != 0) {
                return true;
            }
            return false;
        }

        public String generateUserId() {
            StringBuilder builder = new StringBuilder();
            if (this.mTelephonyDeviceId == null && this.mAndroidId == null && this.mHardwareSerialNumber == null) {
                builder.append(UUID.randomUUID());
            } else {
                if (this.mTelephonyDeviceId != null) {
                    builder.append(this.mTelephonyDeviceId);
                }
                if (this.mAndroidId != null) {
                    builder.append(this.mAndroidId);
                }
                if (this.mHardwareSerialNumber != null) {
                    builder.append(this.mHardwareSerialNumber);
                }
            }
            String baseText = builder.toString();
            String generatedId = SignatureTools.generateSHA1ForString(baseText);
            if (generatedId == null || generatedId.equals(SignatureTools.NO_SHA1_RESULT)) {
                return baseText;
            }
            return generatedId;
        }
    }
}
